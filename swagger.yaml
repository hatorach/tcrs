swagger: '2.0'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
  termsOfService: 'urn:tos'
  contact: {}
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
host: 'localhost:8080'
basePath: /
tags:
  - name: clubs-controller
    description: Clubs Controller
  - name: security-controller
    description: Security Controller
  - name: test-controller
    description: Test Controller
  - name: basic-error-controller
    description: Basic Error Controller
  - name: reservation-controller
    description: Reservation Controller
paths:
  /:
    post:
      tags:
        - security-controller
      summary: register
      operationId: registerUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: registrationRequest
          description: registrationRequest
          required: true
          schema:
            $ref: '#/definitions/RegistrationRequest'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /clubs/list:
    get:
      tags:
        - clubs-controller
      summary: list
      operationId: listUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ClubsListResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /error:
    get:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    head:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingHEAD
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingDELETE
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    options:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingOPTIONS
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingPATCH
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /reservation/add:
    post:
      tags:
        - reservation-controller
      summary: add
      operationId: addUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: reservationAddRequest
          description: reservationAddRequest
          required: true
          schema:
            $ref: '#/definitions/ReservationAddRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ReservationAddResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/reservation/find/:from/:to':
    get:
      tags:
        - reservation-controller
      summary: find
      operationId: findUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: from
          in: query
          description: from
          required: true
          type: string
          format: date-time
        - name: to
          in: query
          description: to
          required: true
          type: string
          format: date-time
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ReservationResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /reservation/get:
    post:
      tags:
        - reservation-controller
      summary: get
      operationId: getUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: reservationGetRequest
          description: reservationGetRequest
          required: true
          schema:
            $ref: '#/definitions/ReservationGetRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ReservationDetailResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /reservation/remove:
    post:
      tags:
        - reservation-controller
      summary: remove
      operationId: removeUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: reservationGetRequest
          description: reservationGetRequest
          required: true
          schema:
            $ref: '#/definitions/ReservationGetRequest'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /test/sendMail:
    get:
      tags:
        - test-controller
      summary: sendMail
      operationId: sendMailUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: recipient
          in: query
          description: recipient
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
definitions:
  ClubsListResponse:
    type: object
    properties:
      name:
        type: string
      url:
        type: string
  ModelAndView:
    type: object
    properties:
      empty:
        type: boolean
      model:
        type: object
      modelMap:
        type: object
        additionalProperties:
          type: object
      reference:
        type: boolean
      status:
        type: string
        enum:
          - '100'
          - '101'
          - '102'
          - '103'
          - '200'
          - '201'
          - '202'
          - '203'
          - '204'
          - '205'
          - '206'
          - '207'
          - '208'
          - '226'
          - '300'
          - '301'
          - '302'
          - '303'
          - '304'
          - '305'
          - '307'
          - '308'
          - '400'
          - '401'
          - '402'
          - '403'
          - '404'
          - '405'
          - '406'
          - '407'
          - '408'
          - '409'
          - '410'
          - '411'
          - '412'
          - '413'
          - '414'
          - '415'
          - '416'
          - '417'
          - '418'
          - '419'
          - '420'
          - '421'
          - '422'
          - '423'
          - '424'
          - '426'
          - '428'
          - '429'
          - '431'
          - '451'
          - '500'
          - '501'
          - '502'
          - '503'
          - '504'
          - '505'
          - '506'
          - '507'
          - '508'
          - '509'
          - '510'
          - '511'
      view:
        $ref: '#/definitions/View'
      viewName:
        type: string
  RegistrationRequest:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
      passwordConfirmation:
        type: string
  ReservationAddRequest:
    type: object
    properties:
      startDatetime:
        type: string
        format: date-time
      hours:
        type: integer
        format: int32
      courtId:
        type: string
      clubUrl:
        type: string
  ReservationAddResponse:
    type: object
    properties:
      clubId:
        type: integer
        format: int64
      courtId:
        type: string
      hours:
        type: integer
        format: int32
      startDatetime:
        type: string
        format: date-time
      url:
        type: string
  ReservationDetailResponse:
    type: object
    properties:
      clubId:
        type: string
      courtId:
        type: string
      hours:
        type: integer
        format: int32
      startDatetime:
        type: string
        format: date-time
      url:
        type: string
  ReservationGetRequest:
    type: object
    properties:
      id:
        type: string
      hash:
        type: string
  ReservationResponse:
    type: object
    properties:
      hours:
        type: integer
        format: int32
      id:
        type: string
      startDatetime:
        type: string
        format: date-time
  View:
    type: object
    properties:
      contentType:
        type: string
