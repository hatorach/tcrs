buildscript {
	ext {
		springBootVersion = '1.5.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
  id "org.sonarqube" version "2.2"
}

apply plugin: 'idea'
apply plugin: 'jacoco'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.sonarqube'
apply plugin: 'org.springframework.boot'

jar {
	baseName = 'tcrs'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
  compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
  compile 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
  compile 'io.springfox:springfox-swagger2:2.2.2'
  compile 'io.springfox:springfox-swagger-ui:2.2.2'
  compile 'org.modelmapper:modelmapper:0.7.5'
  compile 'org.springframework.boot:spring-boot-devtools'
	compile 'org.springframework.boot:spring-boot-starter-cache'
	compile 'org.springframework.boot:spring-boot-starter-data-mongodb'
  compile 'org.springframework.boot:spring-boot-starter-security'
	compile 'org.springframework.boot:spring-boot-starter-web'
//  compile 'org.springframework.session:spring-session'

  compileOnly "org.projectlombok:lombok:1.16.10"

  testCompile 'org.powermock:powermock-mockito-release-full:1.6.4'
  testCompile 'org.springframework.boot:spring-boot-starter-test'
}


idea {
  module {
    downloadSources = true
    excludeDirs += file("bundle")
    excludeDirs += file("src/main/webapp")
  }
}

jacoco {
  toolVersion = '0.7.6.201602180812'
  reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport.dependsOn test

task wrapper(type: Wrapper) {
	gradleVersion = '3.1'
}

sonarqube {
  properties {
    property 'sonar.projectKey', 'com.hatorach.tcrs'
    property 'sonar.projectName', 'TCRS'
  }
}
